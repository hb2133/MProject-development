<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2020 Isara Technologies. All Rights Reserved. -->
<!--GearVR plugin additions-->
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<!-- init section is always evaluated once per architecture -->
	<trace enable="true"/>
	<init>
		<log text="AndroidAPITemplate init"/>		
	</init>

	<androidManifestUpdates>
				<addPermission android:name="android.permission.INTERNET"/>
				<addPermission android:name="android.permission.ACCESS_NETWORK_STATE"/>
				<setElement result="AdMobMeta" value="meta-data" />
				<addAttribute tag="$AdMobMeta" name="android:name" value="com.google.android.gms.ads.APPLICATION_ID" />
				<addAttribute tag="$AdMobMeta" name="android:value" value="ca-app-pub-5747602554912250~4576896722" />
				<addElement tag="application" name="AdMobMeta" />
	</androidManifestUpdates>

	<proguardAdditions>
		<insert><![CDATA[
      -keepattributes Signature
      -dontskipnonpubliclibraryclassmembers
-keepnames class com.aar.admoblibrary.** { *; }  

     -keepclassmembers class com.epicgames.ue4.GameActivity {
            public <methods>;
            public <fields>;
     }
          -keepclassmembers class com.epicgames.unreal.GameActivity {
            public <methods>;
            public <fields>;
     }
     -keep public class com.epicgames.unreal.GameActivity.** {public protected *;}
     
     -keep public class com.epicgames.unreal.GameActivity {
    public void AndroidThunkJava_CreateBanner(String);
}
    ]]></insert>
	</proguardAdditions>
	<prebuildCopies>
		<copyFile src="$S(ProjectDir)/Services/google-services.json" dst="$S(BuildDir)/gradle/app/google-services.json" force="true"/>
		<copyFile src="$S(ProjectDir)/Services/google-services.json" dst="$S(BuildDir)/google-services.json" force="true"/>
	</prebuildCopies>
	<gradleCopies>
		<copyFile src="$S(ProjectDir)/Services/google-services.json" dst="$S(BuildDir)/gradle/app/google-services.json" force="true"/>
		<copyFile src="$S(ProjectDir)/Services/google-services.json" dst="$S(BuildDir)/google-services.json" force="true"/>
	</gradleCopies>
	<buildscriptGradleAdditions>

				<insert>
					dependencies {
					classpath 'com.google.gms:google-services:4.4.2'
				</insert>
				<insert>
					}
				</insert>
	</buildscriptGradleAdditions>
	<buildGradleAdditions>
		<insert>
			dependencies {
			implementation(platform("com.google.firebase:firebase-bom:32.3.1"))
			implementation files('./libs/AdmobLibrary-release.aar')
			implementation 'com.google.android.gms:play-services-ads:22.6.0'
			implementation("com.google.android.gms:play-services-auth:20.7.0")
			implementation("com.google.firebase:firebase-analytics-ktx")
			implementation("com.google.firebase:firebase-auth-ktx")
			implementation("com.google.firebase:firebase-firestore-ktx")
			implementation("com.google.firebase:firebase-database-ktx")
			}
		</insert>
		<insert>
			apply plugin: 'com.android.application'
			apply plugin: 'com.google.gms.google-services'
		</insert>
	</buildGradleAdditions>

  <resourceCopies>
	  <copyFile src="$S(ProjectDir)/Libs/AdmobLibrary-release.aar" dst="$S(BuildDir)/libs/AdmobLibrary-release.aar" />
	  <copyFile src="$S(ProjectDir)/Libs/AdmobLibrary-release.aar" dst="$S(BuildDir)/gradle/app/libs/AdmobLibrary-release.aar" />
	  <copyFile src="$S(ProjectDir)/Services/google-services.json" dst="$S(BuildDir)/gradle/app/google-services.json" force="true"/>
	  <copyFile src="$S(ProjectDir)/Services/google-services.json" dst="$S(BuildDir)/google-services.json" force="true"/>
    <!-- Copy the generated resource file to be packaged -->
  </resourceCopies>

  <AARImports>
	  <insertValue value="repository $S(ProjectDir)/Libs"/>
	  <insertNewline/>
	  <insert>
		  com.aar.admoblibrary:AdmobLibrary-release:1.0
	  </insert>
	  <insertNewline/>
  </AARImports>
  
  <!-- optional additions to the GameActivity imports in GameActivity.java -->
	<gameActivityImportAdditions>
	  <insert>
		  import androidx.annotation.Keep;
		  import com.aar.admoblibrary.AdmobMain;
		  import com.aar.admoblibrary.FireBaseMain;
		  import com.aar.admoblibrary.PurchaseMain;
		  import androidx.annotation.NonNull;
		 // import com.google.android.gms.tasks.Task;
		  import com.google.android.gms.common.api.ApiException;
		  import com.google.android.gms.auth.api.signin.GoogleSignIn;
		  import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
		  import com.google.android.gms.auth.api.signin.GoogleSignInClient;
		  import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
		  import android.util.Log;
    </insert>
	</gameActivityImportAdditions>
	

	<!-- optional additions to the GameActivity class in GameActivity.java -->
	<gameActivityClassAdditions>
		<insert>
		
			public AdmobMain Admob = new AdmobMain();
			public FireBaseMain pFireBase = new FireBaseMain();
			public PurchaseMain Purchase = new PurchaseMain();
			<!-- Purchase Function -->
			<![CDATA[
			@Keep
			void AndroidThunkJava_QueryProducts(ArrayList<String> arrProduct)
			{
				if(Purchase != null)
				{
					Log.debug("Click");
				//	Purchase.queryAvailableProducts(arrProduct);
				}
			}
			
			@Keep
			void AndroidThunkJava_LaunchPurchaseFlow(String Product)
			{
					if(Purchase != null)
				{
					Log.debug("Click");
					Purchase.queryAvailableProducts(Product,new PurchaseMain.Callback()
			{
			@Override
			public void onResult(int result, String type) {
				Log.debug("onResultType");
				onNativePruchaseResult(result,type);
			}
			});
				}
			}
			@Keep
			public native void onNativePruchaseResult(int amount,String type);
				]]>
			<!-- Firebase Function -->
			@Keep
			void AndroidThunkJava_DatabaseSetValue(String path,@NonNull Object value)
			{
				if(pFireBase != null)
				{
					pFireBase.SetDataValue(path,value);
				}
			}
			@Keep
			void AndroidThunkJava_Sign_In()
			{
				if(pFireBase != null)
				{
					pFireBase.signIn();
				}
			}
			
			<!-- Admob Function -->
			@Keep
			void AndroidThunkJava_LoadInterstitialAd(String string)
			{
			Admob.LoadInterstitialAd(string);
			}
			@Keep
			void AndroidThunkJava_LoadRewardAd(String string)
			{
				Admob.LoadRewardAd(string);
			}
			@Keep
			public native void onNativeRewardResult(int amount,String type);
			
			@Keep
			void AndroidThunkJava_ShowRewardAd()
			{
			Admob.ShowRewardAd(new AdmobMain.Callback()
			{
			@Override
			public void onResult(int amount, @NonNull String type) {
				Log.debug("onResultType");
				onNativeRewardResult(amount,type);
			}
			});
			}
			@Keep
			void AndroidThunkJava_CreateBanner(String string)
			{
				Log.debug("CreateBanner");
				Admob.CreateBanner(string);
			}
			@Keep
			void AndroidThunkJava_ShowInterstitialAd()
			{
				Log.debug("ShowBanner");
				Admob.ShowInterstitialAd();
			}
		
		</insert>
	</gameActivityClassAdditions>
	
	<!-- optional additions to GameActivity onCreate metadata reading in GameActivity.java -->
	<gameActivityReadMetadataAdditions>
	<insert>

  </insert>
	</gameActivityReadMetadataAdditions>
	
	<!-- optional additions to GameActivity onCreate in GameActivity.java -->
	<gameActivityOnCreateAdditions>
		<insert>


		</insert>
	</gameActivityOnCreateAdditions>

	<!-- optional additions to GameActivity onDestroy in GameActivity.java -->
	<gameActivityOnDestroyAdditions>
		<insert>
		
		</insert>
	</gameActivityOnDestroyAdditions>
	
	
	<!-- optional additions to GameActivity onStart in GameActivity.java -->
	<gameActivityOnStartAdditions>
		<insert>
			if(pFireBase != null)
			{
				//pFireBase.SetActivity(this);
				//pFireBase.InitializeAuth();
			}
			
			if(Admob != null)
			{
			Admob.SetActivity(this);
			Admob.Initialize();
			}
			
			if(Purchase != null)
			{
				Purchase.SetActivity(this);
				Purchase.Initialize();
			}
		</insert>
	</gameActivityOnStartAdditions>

	<!-- optional additions to GameActivity onStop in GameActivity.java -->
	<gameActivityOnStopAdditions>
		<insert>
		
		</insert>
	</gameActivityOnStopAdditions>
	

	<!-- optional additions to GameActivity onPause in GameActivity.java	-->
	<gameActivityOnPauseAdditions>
    <insert>

    </insert>
  </gameActivityOnPauseAdditions>


  <!-- optional additions to GameActivity onResume in GameActivity.java	-->
  <gameActivityOnResumeAdditions>
    <insert>
    </insert>
  </gameActivityOnResumeAdditions>


	<!-- optional additions to GameActivity onActivityResult in GameActivity.java -->
	<gameActivityOnActivityResultAdditions>
		<insert>
			<![CDATA[

			]]>
		</insert>
    </gameActivityOnActivityResultAdditions>
	

	<!-- optional libraries to load in GameActivity.java before libUE4.so -->
	<soLoadLibrary>
		<!-- need this if plugin enabled and supported architecture, even if not packaged for GearVR -->
	</soLoadLibrary>
</root>
